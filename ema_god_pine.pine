//@version=5
indicator("GOD - Final", overlay=true)

// === EMA Inputs ===
len1 = input.int(8, minval=1, title='EMA1 (Fast)')
len2 = input.int(20, minval=1, title='EMA2 (Slow)')
len3 = input.int(8, minval=1, title='EMA3')
len4 = input.int(20, minval=1, title='EMA4')
len5 = input.int(8, minval=1, title='EMA5')

// === EMA Toggles ===
turnon3 = input.bool(true, title="Turn on EMA3?")
turnon4 = input.bool(true, title="Turn on EMA4?")
turnon5 = input.bool(true, title="Turn on EMA5?")

// === EMA Calculation ===
ema1 = ta.ema(close, len1)
ema2 = ta.ema(close, len2)
ema3 = ta.ema(close, len3)
ema4 = ta.ema(close, len4)
ema5 = ta.ema(close, len5)

// === Ribbon Fill Color Logic ===
fcolor = ema1 > ema2 ? color.new(#0aff68, 0) : ema1 < ema2 ? color.new(#ff0a5a, 0) : color.new(#cccccc, 0)

// === Plot EMA Ribbon ===
F1 = plot(ema1, color=fcolor, linewidth=2, title="Fast EMA")
S2 = plot(ema2, color=fcolor, linewidth=2, title="Slow EMA")
fill(F1, S2, title='Channel Fill', color=color.new(fcolor, 60))

// === Optional EMA Plots ===
plot(turnon3 ? ema3 : na, title='EMA 3', linewidth=2, style=plot.style_line, color=color.new(color.blue, 0))
plot(turnon4 ? ema4 : na, title='EMA 4', linewidth=2, style=plot.style_line, color=color.new(color.orange, 0))
plot(turnon5 ? ema5 : na, title='EMA 5', linewidth=2, style=plot.style_line, color=color.new(color.yellow, 0))

// === 2-Candle Confirmation ===
twoAbove = close > ema1 and close > ema2 and close[1] > ema1[1] and close[1] > ema2[1]
twoBelow = close < ema1 and close < ema2 and close[1] < ema1[1] and close[1] < ema2[1]

// === Track crossover trend ===
var int trend = 0  // 1 = uptrend, -1 = downtrend, 0 = neutral
if ta.crossover(ema1, ema2)
    trend := 1
else if ta.crossunder(ema1, ema2)
    trend := -1

// === Signal Trigger Memory ===
var bool buyFired = false
var bool sellFired = false

// === Buy/Sell Logic with Filtering ===
newBuy = trend == 1 and twoAbove and not buyFired
newSell = trend == -1 and twoBelow and not sellFired

// === Reset flags when trend changes ===
if newBuy
    buyFired := true
    sellFired := false
if newSell
    sellFired := true
    buyFired := false


//--day
day_num   = str.tostring(dayofmonth)
month_str = month == 1 ? "Jan" : month == 2 ? "Feb" : month == 3 ? "Mar" : month == 4 ? "Apr" : month == 5 ? "May" : month == 6 ? "Jun" : month == 7 ? "Jul" : month == 8 ? "Aug" : month == 9 ? "Sep" : month == 10 ? "Oct" : month == 11 ? "Nov" : "Dec"



simple_date = day_num + " " + month_str
// === Build readable time string ===
t_hour = str.tostring(hour)
t_minute = minute < 10 ? "0" + str.tostring(minute) : str.tostring(minute)
t_time = t_hour + ":" + t_minute

// === Show Buy/Sell Labels with Time ===
if newBuy
    label.new(x=bar_index, y=low, text="BUY\n" + t_time + "\n" + simple_date,
              style=label.style_label_up, color=color.green, textcolor=color.white, size=size.small)

if newSell
    label.new(x=bar_index, y=high, text="SELL\n" + t_time + "\n" + simple_date,
              style=label.style_label_down, color=color.red, textcolor=color.white, size=size.small)

// === Alerts ===
alertcondition(newBuy, title="Buy Alert", message="Buy Signal: EMA1 crossed above EMA2 with 2 candle confirmation")
alertcondition(newSell, title="Sell Alert", message="Sell Signal: EMA1 crossed below EMA2 with 2 candle confirmation")
